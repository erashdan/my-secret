AWSTemplateFormatVersion: 2010-09-09
Description: >-
  My Secret Backend Stack

Transform:
- AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 100
    Runtime: nodejs14.x
    MemorySize: 128

Resources:
  createSession:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/sessions/
      Handler: create.handler
      Description: To create a session for user
      Environment:
        Variables:
          SESSION_TABLE: !Ref SessionTable
      Layers:
        - !Ref NodePackages
      Events:
        Api:
          Type: Api
          Properties:
            Path: /session
            Method: POST

  createSecret:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/secrets/
      Handler: create.handler
      Description: To create a secret for a user
      Environment:
        Variables:
          SECRET_TABLE: !Ref SecretTable
      Layers:
        - !Ref NodePackages
      Events:
        Api:
          Type: Api
          Properties:
            Path: /secret
            Method: POST

  NodePackages:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: my-secret-app-dependencies
      Description: All shared node packages cross lambdas
      ContentUri: src/dependencies/
      RetentionPolicy: Retain

#  putItemFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      Handler: src/handlers/put-item.putItemHandler
#      Runtime: nodejs14.x
#      MemorySize: 128
#      Timeout: 100
#      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
#      Policies:
#        # Give Create/Read/Update/Delete Permissions to the SampleTable
#        - DynamoDBCrudPolicy:
#            TableName: !Ref SampleTable
#      Environment:
#        Variables:
#          # Make table name accessible as environment variable from function code during execution
#          SAMPLE_TABLE: !Ref SampleTable
#      Events:
#        Api:
#          Type: Api
#          Properties:
#            Path: /
#            Method: POST
#
  SessionTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: uid
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  SecretTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: uri
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
