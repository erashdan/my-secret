AWSTemplateFormatVersion: 2010-09-09
Description: >-
  My Secret Backend Stack

Transform:
- AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 100
    Runtime: nodejs14.x
    MemorySize: 128
    Layers:
      - !Ref UtilsLayer
      - !Ref ExceptionsLayer
    Environment:
      Variables:
        SECRET_TABLE: !Ref SecretTable

Resources:
  createSession:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/sessions/
      Handler: create.handler
      Description: To create a session for user
      Environment:
        Variables:
          SESSION_TABLE: !Ref SessionTable
      Layers:
        - !Ref NodePackages
      Events:
        Api:
          Type: Api
          Properties:
            Path: /session
            Method: POST

  createSecret:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/secrets/
      Handler: create.handler
      Description: To create a secret for a user
      Layers:
        - !Ref NodePackages
      Events:
        Api:
          Type: Api
          Properties:
            Path: /secret
            Method: POST

  checkSecret:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/secrets/
      Handler: check.handler
      Description: To check if the secret is exist and not opened
      Events:
        Api:
          Type: Api
          Properties:
            Path: /secret/{uri}/check
            Method: GET

  viewSecret:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/secrets/
      Handler: view.handler
      Description: To view the secret
      Events:
        Api:
          Type: Api
          Properties:
            Path: /secret/{uri}
            Method: GET

  deleteSecret:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/secrets/
      Handler: delete.handler
      Description: To delete the secret from database
      Events:
        Api:
          Type: Api
          Properties:
            Path: /secret/{uri}
            Method: DELETE

  NodePackages:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: my-secret-app-dependencies
      Description: All shared node packages cross lambdas
      ContentUri: src/layers/dependencies/
      RetentionPolicy: Retain

  UtilsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: my-secret-app-dependencies
      Description: Get the shared utils for cross lambdas
      ContentUri: src/layers/functions/
      RetentionPolicy: Retain

  ExceptionsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: my-secret-exception-classes
      Description: The exceptions thats exist in secret app
      ContentUri: src/layers/exceptions/
      RetentionPolicy: Retain

  SessionTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: uid
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  SecretTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: uri
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
